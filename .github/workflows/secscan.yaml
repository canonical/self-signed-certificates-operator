name: secscan
on:
  workflow_call:
    inputs:
      artifacts-key:
        description: Key where the artifacts have been uploaded.
        required: true
        type: string

jobs:
  secscan:
    runs-on: [self-hosted, self-hosted-linux-amd64-jammy-private-endpoint-medium]
    steps:
      - name: Install secscan cli
        run: |
          sudo snap install canonical-secscan-client
          sudo snap connect canonical-secscan-client:home system:home
      - name: Download artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: ${{ inputs.artifacts-key }}
          path: built/
      - name: Get Charm Under Test Path
        id: charm-path
        run: echo "charm-path=$(find built/ -name '*.charm' -type f -print)" >> $GITHUB_OUTPUT
      - name: Run secscan
        id: secscan
        continue-on-error: true
        run: |
          echo secscan-result=${{ env.secscan-result }} >> $GITHUB_OUTPUT
          secscan-client --batch submit --scanner trivy --type package --format charm ${{ steps.charm-path.outputs.charm-path }} --wait-and-print > ${{ env.secscan-result }}
        env:
          secscan-result: secscan.result
      - name: Create issue
        if: steps.secscan.outcome != 'success'
        run: |
          cat ${{ steps.secscan.outputs.secscan-result }}
          echo "please check job ${{ github.run_id}}" >> ${{ steps.secscan.outputs.secscan-result}}
          gh issue create -R ${{ github.repository }} --label bug --title "Release compromised by CVE" -F ${{ steps.secscan.outputs.secscan-result}}
        env:
          GH_TOKEN: ${{ github.token }}
        # enhance the above with actions/github-script@v7
